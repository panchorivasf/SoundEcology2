% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_long.R
\name{ts_long}
\alias{ts_long}
\title{Create time series analysis and visualization for acoustic index data}
\usage{
ts_long(
  data,
  index_name = "adi",
  extra_title = "",
  start = NULL,
  end = NULL,
  span = 0.3,
  summarize_by = "day"
)
}
\arguments{
\item{data}{A data frame containing acoustic index data. Must include columns:
'index', 'file_name', and 'value_avg'.}

\item{index_name}{The name of the index to analyze (default: "adi"). Used for plot labels.}

\item{extra_title}{Additional text to include in the plot title (default: "").}

\item{start}{Optional start date for filtering data (format: "YYYY-MM-DD").}

\item{end}{Optional end date for filtering data (format: "YYYY-MM-DD").}

\item{span}{Span parameter for LOESS smoothing (default: 0.3).}

\item{summarize_by}{Temporal resolution for the main plot: "day", "week", or "month" (default: "day").}
}
\value{
A list containing:
\itemize{
\item daily_tibble: Data summarized by day
\item weekly_tibble: Data summarized by week
\item monthly_tibble: Data summarized by month
\item plot: Interactive plotly visualization of the time series
}
}
\description{
This function processes acoustic index data, summarizes it by day/week/month,
and creates interactive visualizations with optional smoothing. It handles datetime
parsing from filenames, data summarization at different temporal resolutions,
and generates plots with range ribbons and average values.
}
\details{
The function performs the following steps:
\enumerate{
\item Extracts datetime information from filenames
\item Parses datetime using multiple possible formats
\item Summarizes data at daily, weekly, and monthly levels
\item Filters data based on start/end dates if provided
\item Creates an interactive plot with range ribbons and average line
\item Optionally adds LOESS smoothing when enough data points exist
}
}
\examples{
\dontrun{
# Basic usage
result <- ts_long(acoustic_data)

# With custom parameters
result <- ts_long(acoustic_data, 
                  index_name = "ndsi",
                  extra_title = "Forest Site A",
                  start = "2023-01-01",
                  end = "2023-06-30",
                  summarize_by = "week")
}

}
